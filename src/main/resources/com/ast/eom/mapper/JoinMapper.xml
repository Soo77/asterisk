<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ast.eom.dao.JoinDao">

  <resultMap type="Member" id="MemberMap">
    <result column="mem_no" property="memberNo"></result>
  </resultMap>
	
	<insert id="insert" parameterType="Member"
    useGeneratedKeys="true"
    keyColumn="mem_no"
    keyProperty="memberNo">
    insert into
    member(mem_type_no,reg_date,gender,dob,id,email,name,pwd,addr_city,addr_sub,tel,profile_photo,activation_key)
    values
    (#{memberTypeNo},now(),#{gender},#{dateOfBirth},#{id},#{email},#{name},password(#{password}),#{addressCity},#{addressSuburb},#{tel},#{profilePhoto},#{activationKey})
  </insert>
  
	<insert id="insertForStudentAndTeacher" parameterType="Member"
    useGeneratedKeys="true"
    keyColumn="mem_no"
    keyProperty="memberNo">
    insert into
    member(mem_type_no,reg_date,gender,dob,id,email,name,pwd,addr_city,addr_sub,tel,profile_photo,activation_key,curr_lesson_dt,curr_lesson_st,curr_lesson_et)
    values
    (#{memberTypeNo},now(),#{gender},#{dateOfBirth},#{id},#{email},#{name},password(#{password}),#{addressCity},#{addressSuburb},#{tel},#{profilePhoto},#{activationKey},#{lessonDays},#{lessonStartTime},#{lessonEndTime})
  </insert>
  
  <insert id="teacherInsert" parameterType="Map">
    insert into
    teacher(tch_no,acc_no,bank_name,lesson_certi,tch_intro)
    values
    (#{teacherNo},#{accountNo},#{bankName},#{lessonCertificate},#{teacherIntro})
  </insert>

  <insert id="teacherSchoolsInsert" parameterType="Map">
    insert into school(tch_no, sch_type_no, sch_name, mdt)
    values(#{teacherNo}, 3, #{highSchool}, now());

    insert into school(tch_no, sch_type_no, sch_name, mdt, major)
    values(#{teacherNo}, 4, #{university}, now(), #{major});
  </insert>

  <insert id="teacherSubjectInsert" parameterType="Map">
    insert into lesson_subject(tch_no, sub_no, rdt, wanted_fee)
    values(#{teacherNo}, #{subjectNo}, now(), #{wantedFee});
  </insert>
  
  <insert id="parentsInsert" parameterType="Parents"
    useGeneratedKeys="true"
    keyColumn="parents_no"
    keyProperty="parentsNo">
    insert into parents(parents_no)
    values(#{parentsNo})
  </insert>
  
  <insert id="studentInsert" parameterType="Map">
    insert into
    student(std_no,req_to_teacher)
    values
    (#{studentNo},#{requirementsToTeacher})
  </insert>

  <insert id="wantedLessonFotStudentInsert" parameterType="WantedLesson">
    insert into
    wanted_lesson(std_no,sub_no,rdt)
    values
    (#{studentNo},#{subjectNo},now())
  </insert>
  
<!--   아이디 중복 -->
	<select id="checkOverId" parameterType="String" resultType="int">
		select count(*) from member where id=#{id}
	</select>
	
<!--   자녀 아이디 -->
  <select id="checkOverChildId" parameterType="String" resultMap="MemberMap">
    select *from member where id like CONCAT('%',#{id},'%') and mem_type_no=1
  </select>
	
<!-- 	이메일 중복 -->
	<select id="checkOverEmail" parameterType="String" resultType="int">
    select count(*) from member where email=#{email}
  </select>
  
<!--   전화번호 중복 -->
  <select id="checkOverTel" parameterType="String" resultType="int">
    select count(*) from member where tel=#{tel}
  </select>
  
<!--   계좌번호 중복 -->
  <select id="checkOverAccountNo" parameterType="String" resultType="int">
    select count(*) from teacher where acc_no=#{accountno}
  </select>
  
  <update id="updateCheck" parameterType="String" >
      UPDATE member SET email_checked = 1 WHERE activation_key = #{activationKey}
  </update>
  
  <update id="bindStudentAndParents" parameterType="Map">
    update member m
    inner join student s on m.mem_no = s.std_no
    set s.parents_no =#{parentsNo}
    where m.id = #{studentId};
  </update>

</mapper>
