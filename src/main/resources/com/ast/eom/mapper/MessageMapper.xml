<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ast.eom.dao.MessageDao">
  <resultMap type="Message" id="MessageMap">
    <result column="message_no" property="messageNo"></result>
    <result column="sender" property="senderNo"></result>
    <result column="receiver" property="receiverNo"></result>
    <result column="message_conts" property="messageContents"></result>
    <result column="send_date" property="sendDate"></result>
    <result column="is_read" property="read"></result>
  </resultMap>
  
  <resultMap type="Member" id="MemberMap">
    <result column="mem_no" property="memberNo"></result>
    <result column="dob" property="dateOfBirth"></result>
    <result column="addr_city" property="addressCity"></result>
    <result column="addr_sub" property="addressSuburb"></result>
    <result column="profile_photo" property="profilePhoto"></result>
  </resultMap>
  
  <select id="detail" parameterType="int" resultMap="MessageMap">
     select *from message where sender=#{memberNo}
  </select>
	
	<select id="messageDetail" parameterType="int" resultMap="MessageMap">
	   select *from message where sender=#{senderNo} and receiver=#{receiverNo}
	   or sender=#{receiverNo} and receiver=#{senderNo}
	</select>
	
	<select id="messageList" parameterType="int" resultMap="MemberMap">
     select distinct m.name, m.mem_no, m.profile_photo from member m inner 
     join message s on m.mem_no = s.sender or m.mem_no = s.receiver
     where s.sender=#{memberNo} or s.receiver=#{memberNo} 
     order by s.message_no desc
  </select>
  
	<insert id="messageIn" parameterType="Message">
     insert into
     message(message_no,sender,receiver,message_conts,send_date,is_read)
     values
     (#{messageNo},#{senderNo},#{receiverNo},#{messageContents},now(),#{read})
  </insert>
  
  <select id="messageReadShowAll" parameterType="int" resultType="int">
     select count(is_read) 
     from message
     where receiver=#{receiverNo} and 
     sender not like #{receiverNo} and 
     is_read like 0;
  </select>
	
  <select id="messageReadShow" parameterType="Message" resultType="int">
     select count(is_read) 
     from message
     where sender=#{senderNo} and receiver=#{receiverNo}
     and is_read like 0;
  </select>
  
  <update id="messageRead" parameterType="Message">
    UPDATE message SET is_read=1 
    WHERE sender=#{receiverNo} and receiver=#{senderNo}
  </update>
  
  
  <select id="searchStd" parameterType="String" resultMap="MemberMap">
    select *from member where id like CONCAT('%',#{id},'%') and mem_type_no=1
  </select>
  
  <select id="lessonInvitationCheck" parameterType="int" resultType="String">
    select std_no from lesson WHERE lesson_no=#{lessonNo}
  </select>
  
  <update id="lessonInvitationStd" parameterType="Map">
    UPDATE lesson SET std_no=#{stdNo}, lesson_stat=2 WHERE lesson_no=#{lessonNo}
  </update>
  
</mapper>
